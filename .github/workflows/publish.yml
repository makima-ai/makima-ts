name: Publish to npm (Force Patch)

on:
  push:
    tags:
      - "v*" # Matches tags like v1.0.0, v1.0.0-alpha.1, etc.

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export PATH="/home/runner/.bun/bin:$PATH"
          echo "Bun version:"
          bun --version

      # Install dependencies with Bun
      - name: Install dependencies
        run: |
          export PATH="/home/runner/.bun/bin:$PATH"
          bun install

      # Build the project
      - name: Build project
        run: |
          export PATH="/home/runner/.bun/bin:$PATH"
          bun run build
          # Verify the dist folder
          ls -la dist

      # Sync version from tag or bump patch version if needed
      - name: Sync or bump version
        run: |
          TAG_VERSION=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/^v//')
          PACKAGE_VERSION=$(jq -r '.version' package.json)

          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION). Updating package.json."
            jq ".version=\"$TAG_VERSION\"" package.json > package.tmp.json
            mv package.tmp.json package.json
          else
            echo "Tag version matches package.json. Checking if patch bump is needed."
            npm version patch --no-git-tag-version
          fi

          echo "Final package.json version:"
          cat package.json

      # Publish to npm
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public || echo "Publish failed. Please check logs."
